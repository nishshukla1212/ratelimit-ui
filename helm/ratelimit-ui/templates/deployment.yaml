apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: "ratelimit-ui"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    tag: {{ required "must provided image tag" .Values.tag }}
  name: "ratelimit-ui-{{ .Release.Name }}"
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.ratelimit_ui.resources.replicas }}
  selector:
    matchLabels:
      app: "ratelimit-ui"
      release: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: "ratelimit-ui"
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: {{ .Release.Name }}
        tag: {{ required "must provided image tag" .Values.tag }}
      annotations:
        prometheus.io/scrape: "false"
        prometheus.io/port: "{{ .Values.service.internalPort }}"
        checksum/config: {{ include (print $.Template.BasePath "/config-map.yaml") . | sha256sum }}
    spec:
      containers:
      - image: "docker.artifactory.prod.adnxs.net/ratelimit-ui:{{ required "Missing .Values.tag" .Values.tag }}"
        imagePullPolicy: IfNotPresent
        terminationMessagePath: /dev/termination-log
        name: "ratelimit-ui"
        envFrom:
        - configMapRef:
            name: "ratelimit-ui-config-{{ .Release.Name }}"
        env:
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          protocol: TCP
        livenessProbe:
          initialDelaySeconds: 10
          timeoutSeconds: 2
          periodSeconds: 5
          httpGet:
            path: /status
            port: {{ .Values.service.internalPort }}
        resources:
          limits:
            cpu: {{ .Values.ratelimit_ui.resources.limits.cpu }}
            memory: {{ .Values.ratelimit_ui.resources.limits.memory }}
          requests:
            cpu: {{ .Values.ratelimit_ui.resources.requests.cpu }}
            memory: {{ .Values.ratelimit_ui.resources.requests.memory }}
      - image: docker.artifactory.prod.adnxs.net/jaeger-agent:latest
        name: jaeger-agent
        ports:
          - containerPort: 5775
            protocol: UDP
          - containerPort: 5778
          - containerPort: 6831
            protocol: UDP
          - containerPort: 6832
            protocol: UDP
        command:
          - "/go/bin/agent-linux"
          - "--collector.host-port={{ .Values.request_tracing_collector.host }}-{{ .Release.Name }}:{{ .Values.request_tracing_collector.port }}"
        resources:
          limits:
            memory: 128Mi
            cpu: 1.0
          requests:
            memory: 128Mi
            cpu: 0.05
      {{ if .Values.metrics_collector }}
      - name: metrics-collector
        image: docker.artifactory.prod.adnxs.net/metrics-collector:{{ .Values.metrics_collector.tag }}
        env:
        - name: PLUGIN_COMMAND
          value: "app_info_measured.py"
        - name: PLUGIN_ARGS
          value: "http://localhost:{{ .Values.service.internalPort }}/metrics"
        - name: METRICS_PREFIX
          value: "{{ required "required" .Values.metrics_collector.prefix }}.{{ required "required" .Values.global.metrics_prefix }}"
        resources:
          limits:
            memory: 128Mi
            cpu: 1
          requests:
            memory: 128Mi
            cpu: 0.05
        imagePullPolicy: IfNotPresent
      {{ end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
